# USER NAME
#                 i.e. "chrissy"
# DECRYPTION PEM LOCATION : Please enter the full path to the decryption key
#                 i.e. "D:/keys/PRIVATE.KEY.pem  (PC)
#                 i.e. "/Volumes/POOKY/PRIVATE.KEY.pem  (UNIX/LINUX/MAC)
# OUTPUT DIRECTORY
#
#				to send to a specific folder use i.e. "output"
#				to send to a timestamped folder use "export.dir.name<-format(Sys.time(), "%y%m%d.%H%M ")"
################################################################################################################
Sys.setenv(TZ='GMT')
#PULL FROM TRACHOMATIC
################################################################################################################
#get data from trachomatic
################################################################################################################
{
setwd("~/Documents/GitHub/EDK0003/001_Data\ Analysis/")
rm(list=ls())
unlink("Output/",recursive = T)
system("sshpass -f pass.sh scp -r chrissyhroberts@10.23.0.82:/Users/chrissyhroberts/Documents/Archiver_Rwanda/Data/Output/  .")
unlink("report/",recursive = T)
}
#server settings
urllocation<-    "https://edk0003.odk.lshtm.ac.uk/edk0003"
user <- "admin"
#location of decryption key
pemlocation<-    "~/Documents/KEY/EDK0003.PRIVATE.KEY.11112.pem"
#directories
export.dir.name <- paste(getwd(),"Output",sep="/")
report.dir.name <- paste(getwd(),"report",sep="/")
storage.dir.name <- paste(getwd(),"xmls",sep="/")
#update software
update.briefcase<-FALSE
################################################################################################################
# ADD OUTBREAK DATES - LEAVE SAME AS EDK0004
################################################################################################################
outbreak.start <- "1 Aug 2018"
vaccination.start <- "10 May 2019"
vaccination.end <- ""
outbreak.end <- ""
################################################################################################################
# ADD LOCATIONS OF REQUIRED SUBSCRIPTS
################################################################################################################
functions.script<-"~/Documents/GitHub/EDK0003/001_Data\ Analysis/000000_EDK_FUNCTIONS.R"
ring.progress.map.script<-"~/Documents/GitHub/EDK0003/001_Data\ Analysis/000000_EDK0003_Ring_Progress_Report_and_Maps.R"
followup.script<-"~/Documents/GitHub/EDK0003/001_Data\ Analysis/000000_EDK0003_Followup_Visits.R"
ebola.script<-"~/Dropbox/git/EDK0003_Rwanda_VSV/001_Data\ Analysis/000000_EDK0003_Ebola.R"
EIG.script<-"~/Dropbox/git/EDK0003_Rwanda_VSV/001_Data\ Analysis/000000_EDK0003_EIG.R"
pregnancy.script<-"~/Dropbox/git/EDK0003_Rwanda_VSV/001_Data\ Analysis/000000_EDK0003_Pregnancy.R"
unplanned.visit.script<- "~/Dropbox/git/EDK0003_Rwanda_VSV/001_Data\ Analysis/000000_EDK0003_Unplanned Visits.R"
HCW.script<-"~/Dropbox/git/EDK0003_Rwanda_VSV/001_Data\ Analysis/000000_EDK0003_HCW.R"
dataflow.script <- "~/Dropbox/git/EDK0003_Rwanda_VSV/001_Data\ Analysis/000000_EDK0003_DataFlowCount.R"
rate.followup.script <- "~/Dropbox/git/EDK0003_Rwanda_VSV/001_Data\ Analysis/000000_EDK0003_Rate_of_followup.R"
message("getting form list")
################################################################################################################
source(functions.script)
################################################################################################################
# add list of forms to pull in the line below (comma separated in double quotes)
formstopull<-c("CRF_s001a_01V4_RZID",
"CRF_sGRO_01_RZID",
"CRF_sEIG_01_RZID",
"CRF_sMVE_RZID",
"CRF_rapport_derreur_RZID",
"CRF_s014_01_RZID",
"CRF_s021_01_RZID",
"CRF_s002_01_RZID",
"CRF_s003_01_RZID",
"CRF_s001b_01_RZID",
"CRF_s050_RZID",
"SAT_001_01_RZID",
"CRF_ring_contacts_RZID",
"CRF_HCW_RZID",
"CRF_c001_01_RZID",
"CRF_s100_01_RZID",
"HHGPS_001_01_RZID")
################################################################################################################
#purge : delete all CSV data prior to run (will remove previous CSV files)
#autodelete : delete data after run (will delete CSV files after report made)
#deletexmlpre : delete previously pulled XML files prior to new pull
#deletexmlpost : delete previously pulled XML files after new pull
{
purge<-TRUE
remove.old.reports<-TRUE
autodelete<-FALSE
deletexmlpre<-FALSE
deletexmlpost<-FALSE
}
################################################################################################################
#Load libraries
################################################################################################################
{
library(getPass)
library(anytime)
library(tidyverse)
library(XML)
library(sp)
library(rgdal)
library(plotKML)
library(fuzzyjoin)
}
################################################################################################################
#create directories if needed
################################################################################################################
{
if(!file.exists(export.dir.name)){dir.create(export.dir.name)}
if(!file.exists(report.dir.name)){dir.create(report.dir.name)}
if(!file.exists(storage.dir.name)){dir.create(storage.dir.name)}
}
################################################################################################################
####GET THE LIST OF ALL FILES###
allcsvs<-list.files(path = export.dir.name,pattern = ".csv",full.names = T)
timestamp<-gsub(readLines("Output/000_timestamp.txt"),pattern = " BST|GMT ",replacement = "")
timestamp<-strptime(x = timestamp,format = "%Y_%m_%d_%H_%M")
timestamp<-gsub(as.Date(timestamp,format="%Y_%m_%d"),pattern = "-",replacement = "_")
for(i in allcsvs)
{
system(paste("mv ",i," ",gsub(i,pattern = ".csv",replacement = paste("_",timestamp,".csv",sep="")),sep=""))
}
timestamp
allcsvs
paste("mv ",i," ",gsub(i,pattern = ".csv",replacement = paste("_",timestamp,".csv",sep="")
)
,sep="")
setwd("~/Documents/Analyser_Rwanda//001_Data\ Analysis/")
source("~/Documents/GitHub/EDK0003/001_Data Analysis/000000_EDK0003_Analysis_VM.R")
##------ Mon Jun 17 12:10:29 2019 ------##
source("~/Documents/GitHub/EDK0003/001_Data Analysis/000000_EDK0003_Analysis_VM.R")
##------ Mon Jun 17 12:28:51 2019 ------##
install.packages("pandoc")
install.packages("devtools")
library(devtools)
install_github('andreacirilloac/updateR')
library(updateR)
library(updateR)
updateR(admin_password = "FOXmagnet-treecharm")
FOXmagnet-treecharm
install.packages(as.vector(needed_packages))
updateR()
install.packages("sp")
library(updateR)
install.packages("pandoc")
install.packages(c("anytime", "aqp", "audio", "broom", "callr", "checkmate", "classInt", "clipr", "cluster", "colorspace", "commonmark", "data.table", "dbplyr", "e1071", "evaluate", "fields", "FNN", "foghorn", "forcats", "fs", "geosphere", "ggmap", "ggplot2", "git2r", "gstat", "gtable", "haven", "highr", "Hmisc", "htmlTable", "htmlwidgets", "httpuv", "hunspell", "igraph", "knitr", "later", "lazyeval", "maptools", "markdown", "modelr", "nlme", "openxlsx", "parsedate", "pkgbuild", "pkgdown", "plotKML", "plotrix", "processx", "ps", "R.utils", "RApiDatetime", "raster", "rcmdcheck", "RCurl", "readr", "readxl", "remotes", "reprex", "reshape", "rgdal", "rgl", "RgoogleMaps", "rhub", "rJava", "rmarkdown", "RSAGA", "rsconnect", "rstudioapi", "rversions", "shiny", "spam", "spData", "spelling", "stringdist", "testthat", "tidyr", "tinytex", "usethis", "whoami", "xfun", "XML", "xtable", "xts", "zip", "zoo"))
install.packages(c("anytime", "aqp", "audio", "broom", "callr", "checkmate", "classInt", "clipr", "cluster", "colorspace", "commonmark", "data.table", "dbplyr", "e1071", "evaluate", "fields", "FNN", "foghorn", "forcats", "fs", "geosphere", "ggmap", "ggplot2", "git2r", "gstat", "gtable", "haven", "highr", "Hmisc", "htmlTable", "htmlwidgets", "httpuv", "hunspell", "igraph", "knitr", "later", "lazyeval", "maptools", "markdown", "modelr", "nlme", "openxlsx", "parsedate", "pkgbuild", "pkgdown", "plotKML", "plotrix", "processx", "ps", "R.utils", "RApiDatetime", "raster", "rcmdcheck", "RCurl", "readr", "readxl", "remotes", "reprex", "reshape", "rgdal", "rgl", "RgoogleMaps", "rhub", "rJava", "rmarkdown", "RSAGA", "rsconnect", "rstudioapi", "rversions", "shiny", "spam", "spData", "spelling", "stringdist", "testthat", "tidyr", "tinytex", "usethis", "whoami", "xfun", "XML", "xtable", "xts", "zip", "zoo"))
install.packages(c("anytime", "aqp", "audio", "broom", "callr", "checkmate", "classInt", "clipr", "cluster", "colorspace", "commonmark", "data.table", "dbplyr", "e1071", "evaluate", "fields", "FNN", "foghorn", "forcats", "fs", "geosphere", "ggmap", "ggplot2", "git2r", "gstat", "gtable", "haven", "highr", "Hmisc", "htmlTable", "htmlwidgets", "httpuv", "hunspell", "igraph", "knitr", "later", "lazyeval", "maptools", "markdown", "modelr", "nlme", "openxlsx", "parsedate", "pkgbuild", "pkgdown", "plotKML", "plotrix", "processx", "ps", "R.utils", "RApiDatetime", "raster", "rcmdcheck", "RCurl", "readr", "readxl", "remotes", "reprex", "reshape", "rgdal", "rgl", "RgoogleMaps", "rhub", "rJava", "rmarkdown", "RSAGA", "rsconnect", "rstudioapi", "rversions", "shiny", "spam", "spData", "spelling", "stringdist", "testthat", "tidyr", "tinytex", "usethis", "whoami", "xfun", "XML", "xtable", "xts", "zip", "zoo"))
install.packages(c("anytime", "aqp", "audio", "broom", "callr", "checkmate", "classInt", "clipr", "cluster", "colorspace", "commonmark", "data.table", "dbplyr", "e1071", "evaluate", "fields", "FNN", "foghorn", "forcats", "fs", "geosphere", "ggmap", "ggplot2", "git2r", "gstat", "gtable", "haven", "highr", "Hmisc", "htmlTable", "htmlwidgets", "httpuv", "hunspell", "igraph", "knitr", "later", "lazyeval", "maptools", "markdown", "modelr", "nlme", "openxlsx", "parsedate", "pkgbuild", "pkgdown", "plotKML", "plotrix", "processx", "ps", "R.utils", "RApiDatetime", "raster", "rcmdcheck", "RCurl", "readr", "readxl", "remotes", "reprex", "reshape", "rgdal", "rgl", "RgoogleMaps", "rhub", "rJava", "rmarkdown", "RSAGA", "rsconnect", "rstudioapi", "rversions", "shiny", "spam", "spData", "spelling", "stringdist", "testthat", "tidyr", "tinytex", "usethis", "whoami", "xfun", "XML", "xtable", "xts", "zip", "zoo"))
install.packages(c("anytime", "aqp", "audio", "broom", "callr", "checkmate", "classInt", "clipr", "cluster", "colorspace", "commonmark", "data.table", "dbplyr", "e1071", "evaluate", "fields", "FNN", "foghorn", "forcats", "fs", "geosphere", "ggmap", "ggplot2", "git2r", "gstat", "gtable", "haven", "highr", "Hmisc", "htmlTable", "htmlwidgets", "httpuv", "hunspell", "igraph", "knitr", "later", "lazyeval", "maptools", "markdown", "modelr", "nlme", "openxlsx", "parsedate", "pkgbuild", "pkgdown", "plotKML", "plotrix", "processx", "ps", "R.utils", "RApiDatetime", "raster", "rcmdcheck", "RCurl", "readr", "readxl", "remotes", "reprex", "reshape", "rgdal", "rgl", "RgoogleMaps", "rhub", "rJava", "rmarkdown", "RSAGA", "rsconnect", "rstudioapi", "rversions", "shiny", "spam", "spData", "spelling", "stringdist", "testthat", "tidyr", "tinytex", "usethis", "whoami", "xfun", "XML", "xtable", "xts", "zip", "zoo"))
