lag_demonstration2
dataflow_2 <- dataflow
dataflow_2 <- dataflow
dataflow_2 <- rename(data_flow2, 'Data Submitted' = SubmissionDate)
dataflow_2 <- rename(data_flow2, 'Data Collected' = today)
dataflow_2 <- gather(dataflow_2,Date,epiday,'Data Submitted':'Data Collected')
#Reshape the data
dataflow_2 <- dataflow
dataflow_2 <- rename(data_flow2, 'Data Submitted' = SubmissionDate)
dataflow_2 <- rename(dataflow_2, 'Data Collected' = today)
dataflow_2 <- gather(dataflow_2,Date,epiday,'Data Submitted':'Data Collected')
dataflow_2 <- dataflow
View(dataflow_2)
dataflow_2 <- rename(data_flow2, 'Data Submitted' = SubmissionDate)
dataflow_2 <- rename(dataflow_2, 'Data Submitted' = SubmissionDate)
dataflow_2 <- rename(dataflow_2, 'Data Collected' = today)
dataflow_2 <- gather(dataflow_2,Date,epiday,'Data Submitted':'Data Collected')
lag_demonstration2  <- ggplot(dataflow_2 ,aes(x = epiday, fill = Date))+
geom_bar(alpha = 0.5, position = "identity") +
guides(alpha = FALSE)+
labs(title = "Forms Received by day", y = "Forms Received", x = "Outbreak Day")+
annotate("text", x = 1, y = height/2, label = outbreak_start_label,size = 3, parse = TRUE) +
annotate("segment", x = 1, xend = 1, y = (height/2)-(height/20), yend = 0,colour = "red") +
annotate("text", x = plotdates$numeric.vaccination.start, y = (height/2)-(height/10), label = vaccination_start_label,size = 3, parse = TRUE) +
{if(plotdates$numeric.vaccination.end!=0) annotate("rect", xmin = plotdates$numeric.vaccination.start, xmax = plotdates$numeric.vaccination.end, ymin = 0, ymax = height/5,alpha = .2)}+
{if(plotdates$numeric.vaccination.end==0) annotate("rect", xmin = plotdates$numeric.vaccination.start, xmax = last_date, ymin = 0, ymax = height/5,alpha = .2)}+
{if(plotdates$numeric.vaccination.end!=0) annotate("text", x = plotdates$numeric.vaccination.end, y = (height/2)-(height/10), label = vaccination_end_label,size = 3, parse = TRUE)} +
{if(plotdates$numeric.outbreak.end!=0) annotate("text", x = plotdates$numeric.outbreak.end, y = height/2, label = outbreak_end_label,size = 3, parse = TRUE)} +
{if(plotdates$numeric.outbreak.end!=0) annotate("segment", x = plotdates$numeric.outbreak.end, xend = plotdates$numeric.outbreak.end, y = (height/2)-(height/20), yend = 0,colour = "red")} +
{if(plotdates$numeric.vaccination.end!=0) annotate("segment", x = plotdates$numeric.vaccination.end, xend = plotdates$numeric.vaccination.end + 21, y = height/10, yend = height/10,colour = "red")} +
{if(plotdates$numeric.vaccination.end!=0) annotate("text", x = plotdates$numeric.vaccination.end + 10, y = height/9, label = "Ongoing Vaccination Follow-up",size = 3,fontface =2)} +
{if(plotdates$numeric.vaccination.end==0) annotate("segment", x = last_date, xend = last_date + 21, y = height/10, yend = height/10,colour = "red")} +
{if(plotdates$numeric.vaccination.end==0) annotate("text", x = last_date + 10, y = height/9, label = "Ongoing Vaccination Follow-up",size = 3, fontface =2)} +
expand_limits(x = c(-2,last_date + 22))
lag_demonstration2
lag_demonstration2  <- ggplot(dataflow_2 ,aes(x = epiday, fill = Date))+
geom_bar(alpha = 0.3, position = "identity") +
guides(alpha = FALSE)+
labs(title = "Forms Received by day", y = "Forms Received", x = "Outbreak Day")+
annotate("text", x = 1, y = height/2, label = outbreak_start_label,size = 3, parse = TRUE) +
annotate("segment", x = 1, xend = 1, y = (height/2)-(height/20), yend = 0,colour = "red") +
annotate("text", x = plotdates$numeric.vaccination.start, y = (height/2)-(height/10), label = vaccination_start_label,size = 3, parse = TRUE) +
{if(plotdates$numeric.vaccination.end!=0) annotate("rect", xmin = plotdates$numeric.vaccination.start, xmax = plotdates$numeric.vaccination.end, ymin = 0, ymax = height/5,alpha = .2)}+
{if(plotdates$numeric.vaccination.end==0) annotate("rect", xmin = plotdates$numeric.vaccination.start, xmax = last_date, ymin = 0, ymax = height/5,alpha = .2)}+
{if(plotdates$numeric.vaccination.end!=0) annotate("text", x = plotdates$numeric.vaccination.end, y = (height/2)-(height/10), label = vaccination_end_label,size = 3, parse = TRUE)} +
{if(plotdates$numeric.outbreak.end!=0) annotate("text", x = plotdates$numeric.outbreak.end, y = height/2, label = outbreak_end_label,size = 3, parse = TRUE)} +
{if(plotdates$numeric.outbreak.end!=0) annotate("segment", x = plotdates$numeric.outbreak.end, xend = plotdates$numeric.outbreak.end, y = (height/2)-(height/20), yend = 0,colour = "red")} +
{if(plotdates$numeric.vaccination.end!=0) annotate("segment", x = plotdates$numeric.vaccination.end, xend = plotdates$numeric.vaccination.end + 21, y = height/10, yend = height/10,colour = "red")} +
{if(plotdates$numeric.vaccination.end!=0) annotate("text", x = plotdates$numeric.vaccination.end + 10, y = height/9, label = "Ongoing Vaccination Follow-up",size = 3,fontface =2)} +
{if(plotdates$numeric.vaccination.end==0) annotate("segment", x = last_date, xend = last_date + 21, y = height/10, yend = height/10,colour = "red")} +
{if(plotdates$numeric.vaccination.end==0) annotate("text", x = last_date + 10, y = height/9, label = "Ongoing Vaccination Follow-up",size = 3, fontface =2)} +
expand_limits(x = c(-2,last_date + 22))
lag_demonstration2
export.dir.name <- "~/Documents/EDK0004/output"
allcsvs<-list.files(path = export.dir.name,pattern = ".csv",full.names = T)
library(tidyverse)
######GET ALL THE FORMS######
#INDEX
plotindex <-allcsvs[grep(allcsvs,pattern = "CRF_c001_01_NOSIG_\\d{4}_\\d{2}_\\d{2}.csv")]
plotindex <- read.csv(file = plotindex)
plotindex <- distinct(plotindex,meta.instanceID, .keep_all = TRUE)
plotindex <- select(plotindex,SubmissionDate,today)
plotindex2<-read.csv(allcsvs[grep(allcsvs,pattern = "CRF_c001_01_RZID_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F)
plotindex2 <- distinct(plotindex2,meta.instanceID, .keep_all = TRUE)
plotindex2 <- select(plotindex2,SubmissionDate,today)
plotindex <- bind_rows(plotindex,plotindex2)
if(length(plotindex$today)>0) plotindex$FormType <- "Index"
rm(plotindex2)
#plotcontacts
plotcontacts<-read.csv(allcsvs[grep(allcsvs,pattern = "CRF_ring_contacts_NOSIG_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F)
plotcontacts <- distinct(plotcontacts,meta.instanceID, .keep_all = TRUE)
plotcontacts2<-read.csv(allcsvs[grep(allcsvs,pattern = "CRF_ring_contacts_RZID_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F)
plotcontacts2 <- distinct(plotcontacts2,meta.instanceID, .keep_all = TRUE)
plotcontacts <- bind_rows(plotcontacts,plotcontacts2)
plotcontacts <- select(plotcontacts,SubmissionDate,today)
rm(plotcontacts2) #Get rid of things we don't need
if(length(plotcontacts$today)>0) plotcontacts$FormType <- "Contact"
#######################################################
#VISITED CONTACTS#
plotparticipants<-read.csv(allcsvs[grep(allcsvs,pattern = "CRF_s001a_01V4_NOSIG_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F)
plotparticipants <- distinct(plotparticipants,meta.instanceID, .keep_all = TRUE)
plotparticipants <- select(plotparticipants,SubmissionDate,today)
plotparticipants2<-read.csv(allcsvs[grep(allcsvs,pattern = "CRF_s001a_01V4_RZID_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F)
plotparticipants2 <- distinct(plotparticipants2,meta.instanceID, .keep_all = TRUE)
plotparticipants2 <- select(plotparticipants2,SubmissionDate,today)
plotparticipants <- bind_rows(plotparticipants, plotparticipants2)
rm(plotparticipants2) #Get rid of things we don't need
#HCW Data
plothcw <-read.csv(allcsvs[grep(allcsvs,pattern = "CRF_HCW_RZID_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F)
plothcw <- select(plothcw,SubmissionDate,today)
plothcw_nosig<-read.csv(allcsvs[grep(allcsvs,pattern = "CRF_HCW_NOSIG_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F)
plothcw_nosig <- select(plothcw_nosig,SubmissionDate,today)
plothcw <- bind_rows(plothcw,plothcw_nosig)
rm(plothcw_nosig)
plotparticipants <- bind_rows(plotparticipants,plothcw)
rm(plothcw)
if(length(plotparticipants$today)>0) plotparticipants$FormType <- "Consent"
#VACCINATED#
plotvaccinated <-read.csv(allcsvs[grep(allcsvs,pattern = "CRF_s001b_01_V2_NOSIG_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F)
plotvaccinated <- distinct(plotvaccinated,meta.instanceID, .keep_all = TRUE)
plotvaccinated <- select(plotvaccinated,SubmissionDate,today)
plotvaccinated2 <-read.csv(allcsvs[grep(allcsvs,pattern = "CRF_s001b_01_RZID_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F)
plotvaccinated2 <- distinct(plotvaccinated2,meta.instanceID, .keep_all = TRUE)
plotvaccinated2 <- select(plotvaccinated2,SubmissionDate,today)
plotvaccinated <- bind_rows(plotvaccinated,plotvaccinated2)
rm(plotvaccinated2) #Get rid of things we don't need
if(length(plotvaccinated$today)>0) plotvaccinated$FormType <- "Vaccination"
#EBOLA
plotebola <-read.csv(allcsvs[grep(allcsvs,pattern = "CRF_sMVE_1NOSIG_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F)
plotebola <- select(plotebola,SubmissionDate,today)
plotebola_nosig <-read.csv(allcsvs[grep(allcsvs,pattern = "CRF_sMVE_RZID_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F)
plotebola_nosig <- select(plotebola_nosig,SubmissionDate,today)
plotebola <- bind_rows(plotebola,plotebola_nosig)
if(length(plotebola$today)>0) plotebola$FormType <- "Ebola"
rm(plotebola_nosig)
#EIG
ploteig <-read.csv(allcsvs[grep(allcsvs,pattern = "CRF_sEIG_01_NOSIG_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F)
ploteig <- select(ploteig,SubmissionDate,today)
ploteig_nosig<-read.csv(allcsvs[grep(allcsvs,pattern = "CRF_sEIG_01_RZID_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F)
ploteig_nosig <- select(ploteig_nosig,SubmissionDate,today)
ploteig <- bind_rows(ploteig,ploteig_nosig)
if(length(ploteig$today)>0) ploteig$FormType <- "Adverse Event"
rm(ploteig_nosig)
#FOLLOWUP
plotd30m<-read.csv(allcsvs[grep(allcsvs,pattern = "CRF_s002_01_NOSIG_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F,na.strings = "")
plotd30m <- select(plotd30m,SubmissionDate,today)
plotd30m2<-read.csv(allcsvs[grep(allcsvs,pattern = "CRF_s002_01_RZID_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F,na.strings = "")
plotd30m2 <- select(plotd30m2,SubmissionDate,today)
plot30m <- bind_rows(plotd30m,plotd30m2)
rm(plotd30m2)
plotd3<-read.csv(allcsvs[grep(allcsvs,pattern = "CRF_s003_01_NOSIG_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F,na.strings = "")
plotd3 <- select(plotd3,SubmissionDate,today)
plotd32<-read.csv(allcsvs[grep(allcsvs,pattern = "CRF_s003_01_RZID_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F,na.strings = "")
plotd32 <- select(plotd32,SubmissionDate,today)
plotd3 <- bind_rows(plotd3,plotd3)
rm(plotd32)
plotd14<-read.csv(allcsvs[grep(allcsvs,pattern = "CRF_s014_01_RZID_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F,na.strings = "")
plotd14 <- select(plotd14,SubmissionDate,today)
plotd142<-read.csv(allcsvs[grep(allcsvs,pattern = "CRF_s014_01_NOSIG_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F,na.strings = "")
plotd142 <- select(plotd142,SubmissionDate,today)
plotd142 <- bind_rows(plotd14,plotd142)
rm(plotd142)
plotd21<-read.csv(allcsvs[grep(allcsvs,pattern = "CRF_s021_01_RZID_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F,na.strings = "")
plotd21 <- select(plotd21,SubmissionDate,today)
plotd212 <-read.csv(allcsvs[grep(allcsvs,pattern = "CRF_s021_01_NOSIG_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F,na.strings = "")
plotd212 <- select(plotd212,SubmissionDate,today)
plotd21 <- bind_rows(plotd21,plotd212)
rm(plotd212)
plotcompleted <- read.csv(allcsvs[grep(allcsvs,pattern = "CRF_s100_01_RZID_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F)
plotcompleted <- distinct(plotcompleted,meta.instanceID, .keep_all = TRUE)
plotcompleted <- select(plotcompleted,SubmissionDate,today)
plotcompleted_noSIG <- read.csv(allcsvs[grep(allcsvs,pattern = "CRF_s100_01_NOSIG_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F)
plotcompleted_noSIG <- distinct(plotcompleted_noSIG,meta.instanceID, .keep_all = TRUE)
plotcompleted_noSIG <- select(plotcompleted_noSIG,SubmissionDate,today)
plotcompleted <- bind_rows(plotcompleted,plotcompleted_noSIG)
rm(plotcompleted_noSIG) #Get rid of things we don't need
plotunplanned_visit <-read.csv(allcsvs[grep(allcsvs,pattern = "CRF_s050_RZID_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F)
plotunplanned_visit <- select(plotunplanned_visit,SubmissionDate,today)
plotunplanned_visit_nosig<-read.csv(allcsvs[grep(allcsvs,pattern = "CRF_s050_NOSIG_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F)
plotunplanned_visit_nosig <- select(plotunplanned_visit_nosig,SubmissionDate,today)
plotunplanned_visit <- bind_rows(plotunplanned_visit,plotunplanned_visit_nosig)
rm(plotunplanned_visit_nosig)
plotfollowup <- bind_rows(plotcompleted, plotd14,plotd21,plotd3,plotd30m,plotunplanned_visit)
if(length(plotfollowup$today)>0) plotfollowup$FormType <- "Follow-Up"
rm(plotcompleted,plotd14,plotd21,plotd3,plotd30m,plotunplanned_visit)
#Pregnancy
plotpregnancy <-read.csv(allcsvs[grep(allcsvs,pattern = "CRF_sGRO_01_NOSIG_V2_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F)
plotpregnancy <- select(plotpregnancy,SubmissionDate,today)
plotpregnancy_nosig<-read.csv(allcsvs[grep(allcsvs,pattern = "CRF_sGRO_01_RZID_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F)
plotpregnancy_nosig <- select(plotpregnancy_nosig,SubmissionDate,today)
plotpregnancy <- bind_rows(plotpregnancy,plotpregnancy_nosig)
rm(plotpregnancy_nosig)
if(length(plotpregnancy$today)>0)plotpregnancy$FormType <- "Pregnancy"
#Locations
plotlocation <-read.csv(allcsvs[grep(allcsvs,pattern = "HHGPS_001_01_RZID_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F)
plotlocation <- select(plotlocation,SubmissionDate,today)
plotlocation2 <-read.csv(allcsvs[grep(allcsvs,pattern = "SAT_001_01_RZID_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F)
plotlocation2 <- select(plotlocation2,SubmissionDate,today)
plotlocation3 <-read.csv(allcsvs[grep(allcsvs,pattern = "HHGPS_001_01_NOSIG_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F)
plotlocation3 <- select(plotlocation3,SubmissionDate,today)
plotlocation4 <-read.csv(allcsvs[grep(allcsvs,pattern = "SAT_001_01_NOSIG_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F)
plotlocation4 <- select(plotlocation4,SubmissionDate,today)
plotlocation <- bind_rows(plotlocation,plotlocation2,plotlocation3,plotlocation4)
rm(plotlocation2,plotlocation3,plotlocation4)
if(length(plotlocation$today)>0)plotlocation$FormType <- "Location"
#DataFlow
dataflow <- bind_rows(plotindex,plotparticipants,plotcontacts,plotvaccinated,plotfollowup,ploteig,plotpregnancy,plotebola,plotlocation)
#THERE IS AN ERROR IN SOME OF THE "TODAY DATES" FOR THESE SET IT TO BE SUBMISSION DATE
dataflow$today[dataflow$today == "10 May 2018"] <-  dataflow$SubmissionDate[dataflow$today == "10 May 2018"]
#CONVERT TO DATES FROM STRINGS
dataflow$SubmissionDate <- as.Date(dataflow$SubmissionDate, "%d %b %Y")
dataflow <- filter(dataflow, today != "5 Aug 2018")
#I must have some old XMLS downloaded so I have this line until I can clear my cache etc#
dataflow$today <- as.Date(dataflow$today, "%d %b %Y")
dataflow$lag <- as.numeric(dataflow$SubmissionDate - dataflow$today)
rm(plotindex,plotparticipants,plotcontacts,plotvaccinated,plotfollowup,ploteig,plotpregnancy)
#Get the stuff we need for the plot
plotdates <- data.frame(outbreak.start,vaccination.start,vaccination.end,outbreak.end)
plotdates$outbreak.start <- as.character(plotdates$outbreak.start)
plotdates$outbreak.start <- as.Date(plotdates$outbreak.start, "%d %b %Y")
plotdates$vaccination.start <- as.character(plotdates$vaccination.start)
plotdates$vaccination.start <- as.Date(plotdates$vaccination.start, "%d %b %Y")
plotdates$vaccination.end <- as.character(plotdates$vaccination.end)
plotdates$vaccination.end <- as.Date(plotdates$vaccination.end, "%d %b %Y")
plotdates$outbreak.end <- as.character(plotdates$outbreak.end)
plotdates$outbreak.end <- as.Date(plotdates$outbreak.end, "%d %b %Y")
if (!is.na(plotdates$vaccination.start)) plotdates$numeric.vaccination.start <- as.numeric(1+(plotdates$vaccination.start - plotdates$outbreak.start)) else plotdates$numeric.vaccination.start <- 0
if (!is.na(plotdates$vaccination.end)) plotdates$numeric.vaccination.end <- as.numeric(1+(plotdates$vaccination.end - plotdates$outbreak.start)) else plotdates$numeric.vaccination.end <- 0
if (!is.na(plotdates$outbreak.end)) plotdates$numeric.outbreak.end <- as.numeric(1+(plotdates$outbreak.end - plotdates$outbreak.start)) else plotdates$numeric.outbreak.end <- 0
#Calculate the difference between when the outbreak started and when we started getting data
plot_submission_lag <-  as.numeric(min(dataflow$SubmissionDate)- plotdates$outbreak.start)
dataflow$SubmissionDate <- as.factor(dataflow$SubmissionDate)
dataflow$SubmissionDate <- as.numeric(dataflow$SubmissionDate)
dataflow$SubmissionDate <- dataflow$SubmissionDate+plot_submission_lag
#Add the lag to our SubmissionDate so it is the correct "Epi Day"
#Calculate the difference between when the outbreak started and when data was collected
dataflow$today <- as.factor(dataflow$today)
dataflow$today <- as.numeric(dataflow$today)
dataflow$today <- dataflow$SubmissionDate - dataflow$lag
#Take the highest value from our assorted dates as we will use this to set a limit on our plot
last_date <- max(c(max(dataflow$SubmissionDate),plotdates$numeric.vaccination.end,plotdates$numeric.outbreak.end))
#How tall do we want things to be
height <- group_by(dataflow, SubmissionDate) %>% summarize(height = length(SubmissionDate))
height <- max(height$height)
#MAKE SOME LABELS FOR THE GRAPH
outbreak_start_label <- noquote(paste('atop(bold("',outbreak.start,'")',",bold(", '"Outbreak Declared"))' ,sep = ""))
vaccination_start_label <- noquote(paste('atop(bold("',vaccination.start,'")',",bold(", '"Vaccination Commenced"))' ,sep = ""))
vaccination_end_label <- noquote(paste('atop(bold("',vaccination.end,'")',",bold(", '"Vaccination Completed"))' ,sep = ""))
outbreak_end_label <- noquote(paste('atop(bold("',outbreak.end,'")',",bold(", '"Outbreak Declared Over"))' ,sep = ""))
form_flow_plot <- ggplot(dataflow,aes(SubmissionDate, fill = FormType))+
geom_bar() +
labs(title = "Forms Received by day", y = "Forms Received", x = "Outbreak Day")+
annotate("text", x = 1, y = height/2, label = outbreak_start_label,size = 3, parse = TRUE) +
annotate("segment", x = 1, xend = 1, y = (height/2)-(height/20), yend = 0,colour = "red") +
annotate("text", x = plotdates$numeric.vaccination.start, y = (height/2)-(height/10), label = vaccination_start_label,size = 3, parse = TRUE) +
{if(plotdates$numeric.vaccination.end!=0) annotate("rect", xmin = plotdates$numeric.vaccination.start, xmax = plotdates$numeric.vaccination.end, ymin = 0, ymax = height/5,alpha = .2)}+
{if(plotdates$numeric.vaccination.end==0) annotate("rect", xmin = plotdates$numeric.vaccination.start, xmax = last_date, ymin = 0, ymax = height/5,alpha = .2)}+
{if(plotdates$numeric.vaccination.end!=0) annotate("text", x = plotdates$numeric.vaccination.end, y = (height/2)-(height/10), label = vaccination_end_label,size = 3, parse = TRUE)} +
{if(plotdates$numeric.outbreak.end!=0) annotate("text", x = plotdates$numeric.outbreak.end, y = height/2, label = outbreak_end_label,size = 3, parse = TRUE)} +
{if(plotdates$numeric.outbreak.end!=0) annotate("segment", x = plotdates$numeric.outbreak.end, xend = plotdates$numeric.outbreak.end, y = (height/2)-(height/20), yend = 0,colour = "red")} +
{if(plotdates$numeric.vaccination.end!=0) annotate("segment", x = plotdates$numeric.vaccination.end, xend = plotdates$numeric.vaccination.end + 21, y = height/10, yend = height/10,colour = "red")} +
{if(plotdates$numeric.vaccination.end!=0) annotate("text", x = plotdates$numeric.vaccination.end + 10, y = height/9, label = "Ongoing Vaccination Follow-up",size = 3,fontface =2)} +
{if(plotdates$numeric.vaccination.end==0) annotate("segment", x = last_date, xend = last_date + 21, y = height/10, yend = height/10,colour = "red")} +
{if(plotdates$numeric.vaccination.end==0) annotate("text", x = last_date + 10, y = height/9, label = "Ongoing Vaccination Follow-up",size = 3, fontface =2)} +
expand_limits(x = c(-2,last_date + 22))
form_flow_plot
ggsave(filename = paste(report.dir.name,"/data_flow.PDF",sep=""),form_flow_plot,device = "pdf",width = 30, height = 21, units = "cm")
#LAG DEMONSRTRATION
#Reshape the data and get the names correct
dataflow_2 <- dataflow
dataflow_2 <- rename(dataflow_2, 'Data Submitted' = SubmissionDate)
dataflow_2 <- rename(dataflow_2, 'Data Collected' = today)
dataflow_2 <- gather(dataflow_2,Date,epiday,'Data Submitted':'Data Collected')
################################################################################################################
outbreak.start <- "1 Aug 2018"
vaccination.start <- "8 Aug 2018"
vaccination.end <- ""
outbreak.end <- ""
######GET ALL THE FORMS######
#INDEX
plotindex <-allcsvs[grep(allcsvs,pattern = "CRF_c001_01_NOSIG_\\d{4}_\\d{2}_\\d{2}.csv")]
plotindex <- read.csv(file = plotindex)
plotindex <- distinct(plotindex,meta.instanceID, .keep_all = TRUE)
plotindex <- select(plotindex,SubmissionDate,today)
plotindex2<-read.csv(allcsvs[grep(allcsvs,pattern = "CRF_c001_01_RZID_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F)
plotindex2 <- distinct(plotindex2,meta.instanceID, .keep_all = TRUE)
plotindex2 <- select(plotindex2,SubmissionDate,today)
plotindex <- bind_rows(plotindex,plotindex2)
if(length(plotindex$today)>0) plotindex$FormType <- "Index"
rm(plotindex2)
#plotcontacts
plotcontacts<-read.csv(allcsvs[grep(allcsvs,pattern = "CRF_ring_contacts_NOSIG_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F)
plotcontacts <- distinct(plotcontacts,meta.instanceID, .keep_all = TRUE)
plotcontacts2<-read.csv(allcsvs[grep(allcsvs,pattern = "CRF_ring_contacts_RZID_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F)
plotcontacts2 <- distinct(plotcontacts2,meta.instanceID, .keep_all = TRUE)
plotcontacts <- bind_rows(plotcontacts,plotcontacts2)
plotcontacts <- select(plotcontacts,SubmissionDate,today)
rm(plotcontacts2) #Get rid of things we don't need
if(length(plotcontacts$today)>0) plotcontacts$FormType <- "Contact"
#######################################################
#VISITED CONTACTS#
plotparticipants<-read.csv(allcsvs[grep(allcsvs,pattern = "CRF_s001a_01V4_NOSIG_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F)
plotparticipants <- distinct(plotparticipants,meta.instanceID, .keep_all = TRUE)
plotparticipants <- select(plotparticipants,SubmissionDate,today)
plotparticipants2<-read.csv(allcsvs[grep(allcsvs,pattern = "CRF_s001a_01V4_RZID_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F)
plotparticipants2 <- distinct(plotparticipants2,meta.instanceID, .keep_all = TRUE)
plotparticipants2 <- select(plotparticipants2,SubmissionDate,today)
plotparticipants <- bind_rows(plotparticipants, plotparticipants2)
rm(plotparticipants2) #Get rid of things we don't need
#HCW Data
plothcw <-read.csv(allcsvs[grep(allcsvs,pattern = "CRF_HCW_RZID_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F)
plothcw <- select(plothcw,SubmissionDate,today)
plothcw_nosig<-read.csv(allcsvs[grep(allcsvs,pattern = "CRF_HCW_NOSIG_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F)
plothcw_nosig <- select(plothcw_nosig,SubmissionDate,today)
plothcw <- bind_rows(plothcw,plothcw_nosig)
rm(plothcw_nosig)
plotparticipants <- bind_rows(plotparticipants,plothcw)
rm(plothcw)
if(length(plotparticipants$today)>0) plotparticipants$FormType <- "Consent"
#VACCINATED#
plotvaccinated <-read.csv(allcsvs[grep(allcsvs,pattern = "CRF_s001b_01_V2_NOSIG_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F)
plotvaccinated <- distinct(plotvaccinated,meta.instanceID, .keep_all = TRUE)
plotvaccinated <- select(plotvaccinated,SubmissionDate,today)
plotvaccinated2 <-read.csv(allcsvs[grep(allcsvs,pattern = "CRF_s001b_01_RZID_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F)
plotvaccinated2 <- distinct(plotvaccinated2,meta.instanceID, .keep_all = TRUE)
plotvaccinated2 <- select(plotvaccinated2,SubmissionDate,today)
plotvaccinated <- bind_rows(plotvaccinated,plotvaccinated2)
rm(plotvaccinated2) #Get rid of things we don't need
if(length(plotvaccinated$today)>0) plotvaccinated$FormType <- "Vaccination"
#EBOLA
plotebola <-read.csv(allcsvs[grep(allcsvs,pattern = "CRF_sMVE_1NOSIG_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F)
plotebola <- select(plotebola,SubmissionDate,today)
plotebola_nosig <-read.csv(allcsvs[grep(allcsvs,pattern = "CRF_sMVE_RZID_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F)
plotebola_nosig <- select(plotebola_nosig,SubmissionDate,today)
plotebola <- bind_rows(plotebola,plotebola_nosig)
if(length(plotebola$today)>0) plotebola$FormType <- "Ebola"
rm(plotebola_nosig)
#EIG
ploteig <-read.csv(allcsvs[grep(allcsvs,pattern = "CRF_sEIG_01_NOSIG_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F)
ploteig <- select(ploteig,SubmissionDate,today)
ploteig_nosig<-read.csv(allcsvs[grep(allcsvs,pattern = "CRF_sEIG_01_RZID_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F)
ploteig_nosig <- select(ploteig_nosig,SubmissionDate,today)
ploteig <- bind_rows(ploteig,ploteig_nosig)
if(length(ploteig$today)>0) ploteig$FormType <- "Adverse Event"
rm(ploteig_nosig)
#FOLLOWUP
plotd30m<-read.csv(allcsvs[grep(allcsvs,pattern = "CRF_s002_01_NOSIG_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F,na.strings = "")
plotd30m <- select(plotd30m,SubmissionDate,today)
plotd30m2<-read.csv(allcsvs[grep(allcsvs,pattern = "CRF_s002_01_RZID_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F,na.strings = "")
plotd30m2 <- select(plotd30m2,SubmissionDate,today)
plot30m <- bind_rows(plotd30m,plotd30m2)
rm(plotd30m2)
plotd3<-read.csv(allcsvs[grep(allcsvs,pattern = "CRF_s003_01_NOSIG_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F,na.strings = "")
plotd3 <- select(plotd3,SubmissionDate,today)
plotd32<-read.csv(allcsvs[grep(allcsvs,pattern = "CRF_s003_01_RZID_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F,na.strings = "")
plotd32 <- select(plotd32,SubmissionDate,today)
plotd3 <- bind_rows(plotd3,plotd3)
rm(plotd32)
plotd14<-read.csv(allcsvs[grep(allcsvs,pattern = "CRF_s014_01_RZID_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F,na.strings = "")
plotd14 <- select(plotd14,SubmissionDate,today)
plotd142<-read.csv(allcsvs[grep(allcsvs,pattern = "CRF_s014_01_NOSIG_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F,na.strings = "")
plotd142 <- select(plotd142,SubmissionDate,today)
plotd142 <- bind_rows(plotd14,plotd142)
rm(plotd142)
plotd21<-read.csv(allcsvs[grep(allcsvs,pattern = "CRF_s021_01_RZID_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F,na.strings = "")
plotd21 <- select(plotd21,SubmissionDate,today)
plotd212 <-read.csv(allcsvs[grep(allcsvs,pattern = "CRF_s021_01_NOSIG_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F,na.strings = "")
plotd212 <- select(plotd212,SubmissionDate,today)
plotd21 <- bind_rows(plotd21,plotd212)
rm(plotd212)
plotcompleted <- read.csv(allcsvs[grep(allcsvs,pattern = "CRF_s100_01_RZID_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F)
plotcompleted <- distinct(plotcompleted,meta.instanceID, .keep_all = TRUE)
plotcompleted <- select(plotcompleted,SubmissionDate,today)
plotcompleted_noSIG <- read.csv(allcsvs[grep(allcsvs,pattern = "CRF_s100_01_NOSIG_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F)
plotcompleted_noSIG <- distinct(plotcompleted_noSIG,meta.instanceID, .keep_all = TRUE)
plotcompleted_noSIG <- select(plotcompleted_noSIG,SubmissionDate,today)
plotcompleted <- bind_rows(plotcompleted,plotcompleted_noSIG)
rm(plotcompleted_noSIG) #Get rid of things we don't need
plotunplanned_visit <-read.csv(allcsvs[grep(allcsvs,pattern = "CRF_s050_RZID_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F)
plotunplanned_visit <- select(plotunplanned_visit,SubmissionDate,today)
plotunplanned_visit_nosig<-read.csv(allcsvs[grep(allcsvs,pattern = "CRF_s050_NOSIG_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F)
plotunplanned_visit_nosig <- select(plotunplanned_visit_nosig,SubmissionDate,today)
plotunplanned_visit <- bind_rows(plotunplanned_visit,plotunplanned_visit_nosig)
rm(plotunplanned_visit_nosig)
plotfollowup <- bind_rows(plotcompleted, plotd14,plotd21,plotd3,plotd30m,plotunplanned_visit)
if(length(plotfollowup$today)>0) plotfollowup$FormType <- "Follow-Up"
rm(plotcompleted,plotd14,plotd21,plotd3,plotd30m,plotunplanned_visit)
#Pregnancy
plotpregnancy <-read.csv(allcsvs[grep(allcsvs,pattern = "CRF_sGRO_01_NOSIG_V2_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F)
plotpregnancy <- select(plotpregnancy,SubmissionDate,today)
plotpregnancy_nosig<-read.csv(allcsvs[grep(allcsvs,pattern = "CRF_sGRO_01_RZID_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F)
plotpregnancy_nosig <- select(plotpregnancy_nosig,SubmissionDate,today)
plotpregnancy <- bind_rows(plotpregnancy,plotpregnancy_nosig)
rm(plotpregnancy_nosig)
if(length(plotpregnancy$today)>0)plotpregnancy$FormType <- "Pregnancy"
#Locations
plotlocation <-read.csv(allcsvs[grep(allcsvs,pattern = "HHGPS_001_01_RZID_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F)
plotlocation <- select(plotlocation,SubmissionDate,today)
plotlocation2 <-read.csv(allcsvs[grep(allcsvs,pattern = "SAT_001_01_RZID_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F)
plotlocation2 <- select(plotlocation2,SubmissionDate,today)
plotlocation3 <-read.csv(allcsvs[grep(allcsvs,pattern = "HHGPS_001_01_NOSIG_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F)
plotlocation3 <- select(plotlocation3,SubmissionDate,today)
plotlocation4 <-read.csv(allcsvs[grep(allcsvs,pattern = "SAT_001_01_NOSIG_\\d{4}_\\d{2}_\\d{2}.csv")],stringsAsFactors = F)
plotlocation4 <- select(plotlocation4,SubmissionDate,today)
plotlocation <- bind_rows(plotlocation,plotlocation2,plotlocation3,plotlocation4)
rm(plotlocation2,plotlocation3,plotlocation4)
if(length(plotlocation$today)>0)plotlocation$FormType <- "Location"
#DataFlow
dataflow <- bind_rows(plotindex,plotparticipants,plotcontacts,plotvaccinated,plotfollowup,ploteig,plotpregnancy,plotebola,plotlocation)
#THERE IS AN ERROR IN SOME OF THE "TODAY DATES" FOR THESE SET IT TO BE SUBMISSION DATE
dataflow$today[dataflow$today == "10 May 2018"] <-  dataflow$SubmissionDate[dataflow$today == "10 May 2018"]
#CONVERT TO DATES FROM STRINGS
dataflow$SubmissionDate <- as.Date(dataflow$SubmissionDate, "%d %b %Y")
dataflow <- filter(dataflow, today != "5 Aug 2018")
#I must have some old XMLS downloaded so I have this line until I can clear my cache etc#
dataflow$today <- as.Date(dataflow$today, "%d %b %Y")
dataflow$lag <- as.numeric(dataflow$SubmissionDate - dataflow$today)
rm(plotindex,plotparticipants,plotcontacts,plotvaccinated,plotfollowup,ploteig,plotpregnancy)
#Get the stuff we need for the plot
plotdates <- data.frame(outbreak.start,vaccination.start,vaccination.end,outbreak.end)
plotdates$outbreak.start <- as.character(plotdates$outbreak.start)
plotdates$outbreak.start <- as.Date(plotdates$outbreak.start, "%d %b %Y")
plotdates$vaccination.start <- as.character(plotdates$vaccination.start)
plotdates$vaccination.start <- as.Date(plotdates$vaccination.start, "%d %b %Y")
plotdates$vaccination.end <- as.character(plotdates$vaccination.end)
plotdates$vaccination.end <- as.Date(plotdates$vaccination.end, "%d %b %Y")
plotdates$outbreak.end <- as.character(plotdates$outbreak.end)
plotdates$outbreak.end <- as.Date(plotdates$outbreak.end, "%d %b %Y")
if (!is.na(plotdates$vaccination.start)) plotdates$numeric.vaccination.start <- as.numeric(1+(plotdates$vaccination.start - plotdates$outbreak.start)) else plotdates$numeric.vaccination.start <- 0
if (!is.na(plotdates$vaccination.end)) plotdates$numeric.vaccination.end <- as.numeric(1+(plotdates$vaccination.end - plotdates$outbreak.start)) else plotdates$numeric.vaccination.end <- 0
if (!is.na(plotdates$outbreak.end)) plotdates$numeric.outbreak.end <- as.numeric(1+(plotdates$outbreak.end - plotdates$outbreak.start)) else plotdates$numeric.outbreak.end <- 0
#Calculate the difference between when the outbreak started and when we started getting data
plot_submission_lag <-  as.numeric(min(dataflow$SubmissionDate)- plotdates$outbreak.start)
dataflow$SubmissionDate <- as.factor(dataflow$SubmissionDate)
dataflow$SubmissionDate <- as.numeric(dataflow$SubmissionDate)
dataflow$SubmissionDate <- dataflow$SubmissionDate+plot_submission_lag
#Add the lag to our SubmissionDate so it is the correct "Epi Day"
#Calculate the difference between when the outbreak started and when data was collected
dataflow$today <- as.factor(dataflow$today)
dataflow$today <- as.numeric(dataflow$today)
dataflow$today <- dataflow$SubmissionDate - dataflow$lag
#Take the highest value from our assorted dates as we will use this to set a limit on our plot
last_date <- max(c(max(dataflow$SubmissionDate),plotdates$numeric.vaccination.end,plotdates$numeric.outbreak.end))
#How tall do we want things to be
height <- group_by(dataflow, SubmissionDate) %>% summarize(height = length(SubmissionDate))
height <- max(height$height)
#MAKE SOME LABELS FOR THE GRAPH
outbreak_start_label <- noquote(paste('atop(bold("',outbreak.start,'")',",bold(", '"Outbreak Declared"))' ,sep = ""))
vaccination_start_label <- noquote(paste('atop(bold("',vaccination.start,'")',",bold(", '"Vaccination Commenced"))' ,sep = ""))
vaccination_end_label <- noquote(paste('atop(bold("',vaccination.end,'")',",bold(", '"Vaccination Completed"))' ,sep = ""))
outbreak_end_label <- noquote(paste('atop(bold("',outbreak.end,'")',",bold(", '"Outbreak Declared Over"))' ,sep = ""))
form_flow_plot <- ggplot(dataflow,aes(SubmissionDate, fill = FormType))+
geom_bar() +
labs(title = "Forms Received by day", y = "Forms Received", x = "Outbreak Day")+
annotate("text", x = 1, y = height/2, label = outbreak_start_label,size = 3, parse = TRUE) +
annotate("segment", x = 1, xend = 1, y = (height/2)-(height/20), yend = 0,colour = "red") +
annotate("text", x = plotdates$numeric.vaccination.start, y = (height/2)-(height/10), label = vaccination_start_label,size = 3, parse = TRUE) +
{if(plotdates$numeric.vaccination.end!=0) annotate("rect", xmin = plotdates$numeric.vaccination.start, xmax = plotdates$numeric.vaccination.end, ymin = 0, ymax = height/5,alpha = .2)}+
{if(plotdates$numeric.vaccination.end==0) annotate("rect", xmin = plotdates$numeric.vaccination.start, xmax = last_date, ymin = 0, ymax = height/5,alpha = .2)}+
{if(plotdates$numeric.vaccination.end!=0) annotate("text", x = plotdates$numeric.vaccination.end, y = (height/2)-(height/10), label = vaccination_end_label,size = 3, parse = TRUE)} +
{if(plotdates$numeric.outbreak.end!=0) annotate("text", x = plotdates$numeric.outbreak.end, y = height/2, label = outbreak_end_label,size = 3, parse = TRUE)} +
{if(plotdates$numeric.outbreak.end!=0) annotate("segment", x = plotdates$numeric.outbreak.end, xend = plotdates$numeric.outbreak.end, y = (height/2)-(height/20), yend = 0,colour = "red")} +
{if(plotdates$numeric.vaccination.end!=0) annotate("segment", x = plotdates$numeric.vaccination.end, xend = plotdates$numeric.vaccination.end + 21, y = height/10, yend = height/10,colour = "red")} +
{if(plotdates$numeric.vaccination.end!=0) annotate("text", x = plotdates$numeric.vaccination.end + 10, y = height/9, label = "Ongoing Vaccination Follow-up",size = 3,fontface =2)} +
{if(plotdates$numeric.vaccination.end==0) annotate("segment", x = last_date, xend = last_date + 21, y = height/10, yend = height/10,colour = "red")} +
{if(plotdates$numeric.vaccination.end==0) annotate("text", x = last_date + 10, y = height/9, label = "Ongoing Vaccination Follow-up",size = 3, fontface =2)} +
expand_limits(x = c(-2,last_date + 22))
form_flow_plot
ggsave(filename = paste(report.dir.name,"/data_flow.PDF",sep=""),form_flow_plot,device = "pdf",width = 30, height = 21, units = "cm")
#LAG DEMONSRTRATION
#Reshape the data and get the names correct
dataflow_2 <- dataflow
dataflow_2 <- rename(dataflow_2, 'Data Submitted' = SubmissionDate)
dataflow_2 <- rename(dataflow_2, 'Data Collected' = today)
dataflow_2 <- gather(dataflow_2,Date,epiday,'Data Submitted':'Data Collected')
View(dataflow_2)
lag_demonstration2  <- ggplot(dataflow_2 ,aes(x = epiday, fill = Date))+
geom_bar(alpha = 0.3, position = "identity") +
guides(alpha = FALSE)+
labs(title = "Forms Received by day", y = "Forms Received", x = "Outbreak Day")+
annotate("text", x = 1, y = height/2, label = outbreak_start_label,size = 3, parse = TRUE) +
annotate("segment", x = 1, xend = 1, y = (height/2)-(height/20), yend = 0,colour = "red") +
annotate("text", x = plotdates$numeric.vaccination.start, y = (height/2)-(height/10), label = vaccination_start_label,size = 3, parse = TRUE) +
{if(plotdates$numeric.vaccination.end!=0) annotate("rect", xmin = plotdates$numeric.vaccination.start, xmax = plotdates$numeric.vaccination.end, ymin = 0, ymax = height/5,alpha = .2)}+
{if(plotdates$numeric.vaccination.end==0) annotate("rect", xmin = plotdates$numeric.vaccination.start, xmax = last_date, ymin = 0, ymax = height/5,alpha = .2)}+
{if(plotdates$numeric.vaccination.end!=0) annotate("text", x = plotdates$numeric.vaccination.end, y = (height/2)-(height/10), label = vaccination_end_label,size = 3, parse = TRUE)} +
{if(plotdates$numeric.outbreak.end!=0) annotate("text", x = plotdates$numeric.outbreak.end, y = height/2, label = outbreak_end_label,size = 3, parse = TRUE)} +
{if(plotdates$numeric.outbreak.end!=0) annotate("segment", x = plotdates$numeric.outbreak.end, xend = plotdates$numeric.outbreak.end, y = (height/2)-(height/20), yend = 0,colour = "red")} +
{if(plotdates$numeric.vaccination.end!=0) annotate("segment", x = plotdates$numeric.vaccination.end, xend = plotdates$numeric.vaccination.end + 21, y = height/10, yend = height/10,colour = "red")} +
{if(plotdates$numeric.vaccination.end!=0) annotate("text", x = plotdates$numeric.vaccination.end + 10, y = height/9, label = "Ongoing Vaccination Follow-up",size = 3,fontface =2)} +
{if(plotdates$numeric.vaccination.end==0) annotate("segment", x = last_date, xend = last_date + 21, y = height/10, yend = height/10,colour = "red")} +
{if(plotdates$numeric.vaccination.end==0) annotate("text", x = last_date + 10, y = height/9, label = "Ongoing Vaccination Follow-up",size = 3, fontface =2)} +
expand_limits(x = c(-2,last_date + 22))+
facet_wrap(FormType)
lag_demonstration2
lag_demonstration2  <- ggplot(dataflow_2 ,aes(x = epiday, fill = Date))+
geom_bar(alpha = 0.3, position = "identity") +
guides(alpha = FALSE)+
labs(title = "Forms Received by day", y = "Forms Received", x = "Outbreak Day")+
annotate("text", x = 1, y = height/2, label = outbreak_start_label,size = 3, parse = TRUE) +
annotate("segment", x = 1, xend = 1, y = (height/2)-(height/20), yend = 0,colour = "red") +
annotate("text", x = plotdates$numeric.vaccination.start, y = (height/2)-(height/10), label = vaccination_start_label,size = 3, parse = TRUE) +
{if(plotdates$numeric.vaccination.end!=0) annotate("rect", xmin = plotdates$numeric.vaccination.start, xmax = plotdates$numeric.vaccination.end, ymin = 0, ymax = height/5,alpha = .2)}+
{if(plotdates$numeric.vaccination.end==0) annotate("rect", xmin = plotdates$numeric.vaccination.start, xmax = last_date, ymin = 0, ymax = height/5,alpha = .2)}+
{if(plotdates$numeric.vaccination.end!=0) annotate("text", x = plotdates$numeric.vaccination.end, y = (height/2)-(height/10), label = vaccination_end_label,size = 3, parse = TRUE)} +
{if(plotdates$numeric.outbreak.end!=0) annotate("text", x = plotdates$numeric.outbreak.end, y = height/2, label = outbreak_end_label,size = 3, parse = TRUE)} +
{if(plotdates$numeric.outbreak.end!=0) annotate("segment", x = plotdates$numeric.outbreak.end, xend = plotdates$numeric.outbreak.end, y = (height/2)-(height/20), yend = 0,colour = "red")} +
{if(plotdates$numeric.vaccination.end!=0) annotate("segment", x = plotdates$numeric.vaccination.end, xend = plotdates$numeric.vaccination.end + 21, y = height/10, yend = height/10,colour = "red")} +
{if(plotdates$numeric.vaccination.end!=0) annotate("text", x = plotdates$numeric.vaccination.end + 10, y = height/9, label = "Ongoing Vaccination Follow-up",size = 3,fontface =2)} +
{if(plotdates$numeric.vaccination.end==0) annotate("segment", x = last_date, xend = last_date + 21, y = height/10, yend = height/10,colour = "red")} +
{if(plotdates$numeric.vaccination.end==0) annotate("text", x = last_date + 10, y = height/9, label = "Ongoing Vaccination Follow-up",size = 3, fontface =2)} +
expand_limits(x = c(-2,last_date + 22))+
facet_wrap("FormType")
lag_demonstration2
lag_demonstration2  <- ggplot(dataflow_2 ,aes(x = epiday, fill = Date))+
geom_bar(alpha = 0.3, position = "identity") +
guides(alpha = FALSE)+
labs(title = "Forms Received by day", y = "Forms Received", x = "Outbreak Day")+
annotate("text", x = 1, y = height/2, label = outbreak_start_label,size = 3, parse = TRUE) +
annotate("segment", x = 1, xend = 1, y = (height/2)-(height/20), yend = 0,colour = "red") +
annotate("text", x = plotdates$numeric.vaccination.start, y = (height/2)-(height/10), label = vaccination_start_label,size = 3, parse = TRUE) +
{if(plotdates$numeric.vaccination.end!=0) annotate("rect", xmin = plotdates$numeric.vaccination.start, xmax = plotdates$numeric.vaccination.end, ymin = 0, ymax = height/5,alpha = .2)}+
{if(plotdates$numeric.vaccination.end==0) annotate("rect", xmin = plotdates$numeric.vaccination.start, xmax = last_date, ymin = 0, ymax = height/5,alpha = .2)}+
{if(plotdates$numeric.vaccination.end!=0) annotate("text", x = plotdates$numeric.vaccination.end, y = (height/2)-(height/10), label = vaccination_end_label,size = 3, parse = TRUE)} +
{if(plotdates$numeric.outbreak.end!=0) annotate("text", x = plotdates$numeric.outbreak.end, y = height/2, label = outbreak_end_label,size = 3, parse = TRUE)} +
{if(plotdates$numeric.outbreak.end!=0) annotate("segment", x = plotdates$numeric.outbreak.end, xend = plotdates$numeric.outbreak.end, y = (height/2)-(height/20), yend = 0,colour = "red")} +
{if(plotdates$numeric.vaccination.end!=0) annotate("segment", x = plotdates$numeric.vaccination.end, xend = plotdates$numeric.vaccination.end + 21, y = height/10, yend = height/10,colour = "red")} +
{if(plotdates$numeric.vaccination.end!=0) annotate("text", x = plotdates$numeric.vaccination.end + 10, y = height/9, label = "Ongoing Vaccination Follow-up",size = 3,fontface =2)} +
{if(plotdates$numeric.vaccination.end==0) annotate("segment", x = last_date, xend = last_date + 21, y = height/10, yend = height/10,colour = "red")} +
{if(plotdates$numeric.vaccination.end==0) annotate("text", x = last_date + 10, y = height/9, label = "Ongoing Vaccination Follow-up",size = 3, fontface =2)} +
expand_limits(x = c(-2,last_date + 22))+
lag_demonstration2
